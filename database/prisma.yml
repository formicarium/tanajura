# The endpoint of your Prisma API (deployed to a Prisma Sandbox).
endpoint: ${env:PRISMA_ENDPOINT}

# The file containing the definition of your data model.
datamodel:
  - datamodel/common.graphql
  - datamodel/attachment.graphql
  - datamodel/board.graphql
  - datamodel/collection.graphql
  - datamodel/organization.graphql
  - datamodel/project.graphql
  - datamodel/technology-description.graphql
  - datamodel/technology.graphql
  - datamodel/user.graphql

# Download the GraphQL schema of the Prisma API into
# `src/generated/prisma.graphql` (as specfied in `.graphqlconfig.yml`).
# Then generate the corresponding TypeScript definitions into
# `src/generated/prisma.ts` (also specfied in `.graphqlconfig.yml`)
# with `graphql prepare` .
hooks:
  post-deploy:
    - graphql get-schema
    - graphql codegen

# If specified, the `secret` must be used to generate a JWT which is attached
# to the `Authorization` header of HTTP requests made against the Prisma API.
# Info: https://www.prisma.io/docs/reference/prisma-api/concepts-utee3eiquo#authentication
# secret: mysecret123